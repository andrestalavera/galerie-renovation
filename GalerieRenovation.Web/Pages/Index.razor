@page "/"
@inject HttpClient Http
<PageTitle>Accueil</PageTitle>

@if (carousel is null)
{
    <Loading />
}
else
{
    <section id="home-carousel-section">
        <div id="@carousel.UniqueId" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                @{
                    int i = -1;
                    foreach (CarouselItem carouselItem in carousel.Items)
                    {
                        i++;
                        string isActiveClassName = string.Empty;
                        bool isActiveClass = false;
                        if (i == 0)
                        {
                            isActiveClassName = "active";
                            isActiveClass = true;
                        }

                        <button type="button" data-bs-target="#@carousel.UniqueId" data-bs-slide-to="@i" aria-label="Slide @i" class="@isActiveClassName" aria-current="@isActiveClass"></button>
                    }
                }
            </div>
            <div class="carousel-inner">
                @{
                    int j = -1;
                    foreach (var item in carousel.Items)
                    {
                        j++;
                        string isActiveClassName = string.Empty;
                        if (j == 0)
                        {
                            isActiveClassName = "active";
                        }
                        <div class="carousel-item @isActiveClassName">
                            <img src="Images/@item.ImageUrl" class="d-block w-100" alt="">
                            <div class="carousel-caption d-none d-md-block">
                                @if (!string.IsNullOrWhiteSpace(item.Title))
                                {
                                    <h5 class="text-@item.TextColor">@item.Title</h5>
                                }
                                @if (!string.IsNullOrWhiteSpace(item.Description))
                                {
                                    <p class="text-@item.TextColor">@item.Description</p>
                                }
                                @if (!string.IsNullOrWhiteSpace(item.Route))
                                {
                                    <a class="btn btn-@item.BackgroundColor" href="@item.Route">En savoir plus</a>
                                }

                            </div>
                        </div>
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#@carousel.UniqueId" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#@carousel.UniqueId" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </section>
}

<section>
    <center class="mt-3">
        <h1>Réinventez votre intérieur</h1>
    </center>
</section>

<section style="height:2000px;">
    height:2000px;
</section>

@code {
    private Carousel? carousel;

    protected override async Task OnInitializedAsync()
    {
        carousel = await Http.GetFromJsonAsync<Carousel>("data/home-carousel.json");
    }
}